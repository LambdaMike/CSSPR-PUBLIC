generator client {
  provider = "prisma-client-js"
}

// mysql in production
datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id           String       @id @default(uuid())
  email        String       @unique
  name         String
  departement  Department?  @relation(fields: [departmentId], references: [id], onUpdate: Cascade, onDelete: SetNull)
  role         Role?        @relation(fields: [roleId], references: [id], onUpdate: Cascade, onDelete: SetNull)
  departmentId Int?
  roleId       Int?
  permissions   Permission[]
  Admin        Admin[]
  sid          Sid[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  deletedAt    DateTime?
}

model Admin {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  password  String
  userId    String?
  user      User?     @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: SetNull)
  deletedAt DateTime?
}

model Role {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  users      User[]
}

model Department {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  users      User[]
}

model System {
  id         Int          @id @default(autoincrement())
  name       String       @unique
  deletedAt  DateTime?
  Permission Permission[]
}

model Permission {
  id       Int     @id @default(autoincrement())
  User     User?   @relation(fields: [userId], references: [id])
  System   System  @relation(fields: [systemId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userId   String
  systemId Int
  allow    Boolean @default(false)

  @@unique([userId, systemId])
}

model Sid {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  user      User?     @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: SetNull)
  userId    String?

  @@unique([name, userId])
}